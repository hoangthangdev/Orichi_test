{"ast":null,"code":"import React, { useRef, useState, useReducer, useCallback, useEffect, useMemo } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport styles from './Actions.css.js';\nimport { getVisibleAndHiddenActionsIndices } from './utilities.js';\nimport { MenuGroup } from '../MenuGroup/MenuGroup.js';\nimport { ActionsMeasurer } from './components/ActionsMeasurer/ActionsMeasurer.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { SecondaryAction } from '../SecondaryAction/SecondaryAction.js';\nfunction Actions(_ref) {\n  let {\n    actions,\n    groups,\n    onActionRollup\n  } = _ref;\n  const i18n = useI18n();\n  const rollupActiveRef = useRef(null);\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [state, setState] = useReducer((data, partialData) => {\n    return {\n      ...data,\n      ...partialData\n    };\n  }, {\n    disclosureWidth: 0,\n    containerWidth: Infinity,\n    actionsWidths: [],\n    visibleActions: [],\n    hiddenActions: [],\n    visibleGroups: [],\n    hiddenGroups: [],\n    hasMeasured: false\n  });\n  const {\n    visibleActions,\n    hiddenActions,\n    visibleGroups,\n    hiddenGroups,\n    containerWidth,\n    disclosureWidth,\n    actionsWidths,\n    hasMeasured\n  } = state;\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.ActionMenu.Actions.moreActions'),\n    actions: []\n  };\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  useEffect(() => {\n    if (containerWidth === 0) {\n      return;\n    }\n    const {\n      visibleActions,\n      visibleGroups,\n      hiddenActions,\n      hiddenGroups\n    } = getVisibleAndHiddenActionsIndices(actions, groups, disclosureWidth, actionsWidths, containerWidth);\n    setState({\n      visibleActions,\n      visibleGroups,\n      hiddenActions,\n      hiddenGroups,\n      hasMeasured: containerWidth !== Infinity\n    });\n  }, [containerWidth, disclosureWidth, actions, groups, actionsWidths, setState]);\n  const actionsOrDefault = useMemo(() => actions ?? [], [actions]);\n  const groupsOrDefault = useMemo(() => groups ?? [], [groups]);\n  const actionsMarkup = actionsOrDefault.filter((_, index) => {\n    if (!visibleActions.includes(index)) {\n      return false;\n    }\n    return true;\n  }).map(action => {\n    const {\n      content,\n      onAction,\n      ...rest\n    } = action;\n    return /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest), content);\n  });\n  const groupsToFilter = hiddenGroups.length > 0 || hiddenActions.length > 0 ? [...groupsOrDefault, defaultRollupGroup] : [...groupsOrDefault];\n  const filteredGroups = groupsToFilter.filter((group, index) => {\n    const hasNoGroupsProp = groupsOrDefault.length === 0;\n    const isVisibleGroup = visibleGroups.includes(index);\n    const isDefaultGroup = group === defaultRollupGroup;\n    if (hasNoGroupsProp) {\n      return hiddenActions.length > 0;\n    }\n    if (isDefaultGroup) {\n      return true;\n    }\n    return isVisibleGroup;\n  });\n  const hiddenActionObjects = hiddenActions.map(index => actionsOrDefault[index]).filter(action => action != null);\n  const hiddenGroupObjects = hiddenGroups.map(index => groupsOrDefault[index]).filter(group => group != null);\n  const groupsMarkup = filteredGroups.map(group => {\n    const {\n      title,\n      actions: groupActions,\n      ...rest\n    } = group;\n    const isDefaultGroup = group === defaultRollupGroup;\n    const allHiddenItems = [...hiddenActionObjects, ...hiddenGroupObjects];\n    const [finalRolledUpActions, finalRolledUpSectionGroups] = allHiddenItems.reduce((_ref2, action) => {\n      let [actions, sections] = _ref2;\n      if (isMenuGroup(action)) {\n        sections.push({\n          title: action.title,\n          items: action.actions.map(sectionAction => ({\n            ...sectionAction,\n            disabled: action.disabled || sectionAction.disabled\n          }))\n        });\n      } else {\n        actions.push(action);\n      }\n      return [actions, sections];\n    }, [[], []]);\n    if (!isDefaultGroup) {\n      // Render a normal MenuGroup with just its actions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: groupActions\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose\n      }));\n    }\n    return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n      key: title,\n      title: title,\n      active: title === activeMenuGroup,\n      actions: [...finalRolledUpActions, ...groupActions],\n      sections: finalRolledUpSectionGroups\n    }, rest, {\n      onOpen: handleMenuGroupToggle,\n      onClose: handleMenuGroupClose\n    }));\n  });\n  const handleMeasurement = useCallback(measurements => {\n    const {\n      hiddenActionsWidths: actionsWidths,\n      containerWidth,\n      disclosureWidth\n    } = measurements;\n    const {\n      visibleActions,\n      hiddenActions,\n      visibleGroups,\n      hiddenGroups\n    } = getVisibleAndHiddenActionsIndices(actionsOrDefault, groupsOrDefault, disclosureWidth, actionsWidths, containerWidth);\n    if (onActionRollup) {\n      const isRollupActive = hiddenActions.length > 0 || hiddenGroups.length > 0;\n      if (rollupActiveRef.current !== isRollupActive) {\n        onActionRollup(isRollupActive);\n        rollupActiveRef.current = isRollupActive;\n      }\n    }\n    setState({\n      visibleActions,\n      hiddenActions,\n      visibleGroups,\n      hiddenGroups,\n      actionsWidths,\n      containerWidth,\n      disclosureWidth,\n      hasMeasured: true\n    });\n  }, [actionsOrDefault, groupsOrDefault, onActionRollup]);\n  const actionsMeasurer = /*#__PURE__*/React.createElement(ActionsMeasurer, {\n    actions: actions,\n    groups: groups,\n    handleMeasurement: handleMeasurement\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionsLayoutOuter\n  }, actionsMeasurer, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.ActionsLayout, !hasMeasured && styles['ActionsLayout--measuring'])\n  }, actionsMarkup, groupsMarkup));\n}\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\nexport { Actions };","map":{"version":3,"names":["React","useRef","useState","useReducer","useCallback","useEffect","useMemo","classNames","styles","getVisibleAndHiddenActionsIndices","MenuGroup","ActionsMeasurer","useI18n","SecondaryAction","Actions","_ref","actions","groups","onActionRollup","i18n","rollupActiveRef","activeMenuGroup","setActiveMenuGroup","undefined","state","setState","data","partialData","disclosureWidth","containerWidth","Infinity","actionsWidths","visibleActions","hiddenActions","visibleGroups","hiddenGroups","hasMeasured","defaultRollupGroup","title","translate","handleMenuGroupToggle","group","handleMenuGroupClose","actionsOrDefault","groupsOrDefault","actionsMarkup","filter","_","index","includes","map","action","content","onAction","rest","createElement","Object","assign","key","onClick","groupsToFilter","length","filteredGroups","hasNoGroupsProp","isVisibleGroup","isDefaultGroup","hiddenActionObjects","hiddenGroupObjects","groupsMarkup","groupActions","allHiddenItems","finalRolledUpActions","finalRolledUpSectionGroups","reduce","_ref2","sections","isMenuGroup","push","items","sectionAction","disabled","active","onOpen","onClose","handleMeasurement","measurements","hiddenActionsWidths","isRollupActive","current","actionsMeasurer","className","ActionsLayoutOuter","ActionsLayout","actionOrMenuGroup"],"sources":["D:/tesst/test/node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.js"],"sourcesContent":["import React, { useRef, useState, useReducer, useCallback, useEffect, useMemo } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport styles from './Actions.css.js';\nimport { getVisibleAndHiddenActionsIndices } from './utilities.js';\nimport { MenuGroup } from '../MenuGroup/MenuGroup.js';\nimport { ActionsMeasurer } from './components/ActionsMeasurer/ActionsMeasurer.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { SecondaryAction } from '../SecondaryAction/SecondaryAction.js';\n\nfunction Actions({\n  actions,\n  groups,\n  onActionRollup\n}) {\n  const i18n = useI18n();\n  const rollupActiveRef = useRef(null);\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [state, setState] = useReducer((data, partialData) => {\n    return {\n      ...data,\n      ...partialData\n    };\n  }, {\n    disclosureWidth: 0,\n    containerWidth: Infinity,\n    actionsWidths: [],\n    visibleActions: [],\n    hiddenActions: [],\n    visibleGroups: [],\n    hiddenGroups: [],\n    hasMeasured: false\n  });\n  const {\n    visibleActions,\n    hiddenActions,\n    visibleGroups,\n    hiddenGroups,\n    containerWidth,\n    disclosureWidth,\n    actionsWidths,\n    hasMeasured\n  } = state;\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.ActionMenu.Actions.moreActions'),\n    actions: []\n  };\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  useEffect(() => {\n    if (containerWidth === 0) {\n      return;\n    }\n    const {\n      visibleActions,\n      visibleGroups,\n      hiddenActions,\n      hiddenGroups\n    } = getVisibleAndHiddenActionsIndices(actions, groups, disclosureWidth, actionsWidths, containerWidth);\n    setState({\n      visibleActions,\n      visibleGroups,\n      hiddenActions,\n      hiddenGroups,\n      hasMeasured: containerWidth !== Infinity\n    });\n  }, [containerWidth, disclosureWidth, actions, groups, actionsWidths, setState]);\n  const actionsOrDefault = useMemo(() => actions ?? [], [actions]);\n  const groupsOrDefault = useMemo(() => groups ?? [], [groups]);\n  const actionsMarkup = actionsOrDefault.filter((_, index) => {\n    if (!visibleActions.includes(index)) {\n      return false;\n    }\n    return true;\n  }).map(action => {\n    const {\n      content,\n      onAction,\n      ...rest\n    } = action;\n    return /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest), content);\n  });\n  const groupsToFilter = hiddenGroups.length > 0 || hiddenActions.length > 0 ? [...groupsOrDefault, defaultRollupGroup] : [...groupsOrDefault];\n  const filteredGroups = groupsToFilter.filter((group, index) => {\n    const hasNoGroupsProp = groupsOrDefault.length === 0;\n    const isVisibleGroup = visibleGroups.includes(index);\n    const isDefaultGroup = group === defaultRollupGroup;\n    if (hasNoGroupsProp) {\n      return hiddenActions.length > 0;\n    }\n    if (isDefaultGroup) {\n      return true;\n    }\n    return isVisibleGroup;\n  });\n  const hiddenActionObjects = hiddenActions.map(index => actionsOrDefault[index]).filter(action => action != null);\n  const hiddenGroupObjects = hiddenGroups.map(index => groupsOrDefault[index]).filter(group => group != null);\n  const groupsMarkup = filteredGroups.map(group => {\n    const {\n      title,\n      actions: groupActions,\n      ...rest\n    } = group;\n    const isDefaultGroup = group === defaultRollupGroup;\n    const allHiddenItems = [...hiddenActionObjects, ...hiddenGroupObjects];\n    const [finalRolledUpActions, finalRolledUpSectionGroups] = allHiddenItems.reduce(([actions, sections], action) => {\n      if (isMenuGroup(action)) {\n        sections.push({\n          title: action.title,\n          items: action.actions.map(sectionAction => ({\n            ...sectionAction,\n            disabled: action.disabled || sectionAction.disabled\n          }))\n        });\n      } else {\n        actions.push(action);\n      }\n      return [actions, sections];\n    }, [[], []]);\n    if (!isDefaultGroup) {\n      // Render a normal MenuGroup with just its actions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: groupActions\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose\n      }));\n    }\n    return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n      key: title,\n      title: title,\n      active: title === activeMenuGroup,\n      actions: [...finalRolledUpActions, ...groupActions],\n      sections: finalRolledUpSectionGroups\n    }, rest, {\n      onOpen: handleMenuGroupToggle,\n      onClose: handleMenuGroupClose\n    }));\n  });\n  const handleMeasurement = useCallback(measurements => {\n    const {\n      hiddenActionsWidths: actionsWidths,\n      containerWidth,\n      disclosureWidth\n    } = measurements;\n    const {\n      visibleActions,\n      hiddenActions,\n      visibleGroups,\n      hiddenGroups\n    } = getVisibleAndHiddenActionsIndices(actionsOrDefault, groupsOrDefault, disclosureWidth, actionsWidths, containerWidth);\n    if (onActionRollup) {\n      const isRollupActive = hiddenActions.length > 0 || hiddenGroups.length > 0;\n      if (rollupActiveRef.current !== isRollupActive) {\n        onActionRollup(isRollupActive);\n        rollupActiveRef.current = isRollupActive;\n      }\n    }\n    setState({\n      visibleActions,\n      hiddenActions,\n      visibleGroups,\n      hiddenGroups,\n      actionsWidths,\n      containerWidth,\n      disclosureWidth,\n      hasMeasured: true\n    });\n  }, [actionsOrDefault, groupsOrDefault, onActionRollup]);\n  const actionsMeasurer = /*#__PURE__*/React.createElement(ActionsMeasurer, {\n    actions: actions,\n    groups: groups,\n    handleMeasurement: handleMeasurement\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionsLayoutOuter\n  }, actionsMeasurer, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.ActionsLayout, !hasMeasured && styles['ActionsLayout--measuring'])\n  }, actionsMarkup, groupsMarkup));\n}\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\n\nexport { Actions };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}