{"ast":null,"code":"import React, { memo, useContext } from 'react';\nimport { CheckIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { ComboboxListboxOptionContext } from '../../../../utilities/combobox/context.js';\nimport { ActionContext } from '../../../../utilities/listbox/context.js';\nimport styles from './TextOption.css.js';\nimport { Checkbox } from '../../../Checkbox/Checkbox.js';\nimport { Box } from '../../../Box/Box.js';\nimport { InlineStack } from '../../../InlineStack/InlineStack.js';\nimport { Icon } from '../../../Icon/Icon.js';\nconst TextOption = /*#__PURE__*/memo(function TextOption(_ref) {\n  let {\n    children,\n    selected,\n    disabled\n  } = _ref;\n  const {\n    allowMultiple\n  } = useContext(ComboboxListboxOptionContext);\n  const isAction = useContext(ActionContext);\n  const textOptionClassName = classNames(styles.TextOption, selected && !allowMultiple && styles.selected, disabled && styles.disabled, allowMultiple && styles.allowMultiple, isAction && styles.isAction);\n  const optionMarkup = selected ? /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\"\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    wrap: false,\n    align: \"space-between\",\n    gap: \"200\"\n  }, children, /*#__PURE__*/React.createElement(InlineStack, {\n    align: \"end\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: CheckIcon\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: textOptionClassName\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Content\n  }, allowMultiple && !isAction ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: disabled,\n    checked: selected,\n    label: children\n  })) : optionMarkup));\n});\nexport { TextOption };","map":{"version":3,"names":["React","memo","useContext","CheckIcon","classNames","ComboboxListboxOptionContext","ActionContext","styles","Checkbox","Box","InlineStack","Icon","TextOption","_ref","children","selected","disabled","allowMultiple","isAction","textOptionClassName","optionMarkup","createElement","width","wrap","align","gap","source","Fragment","className","Content","checked","label"],"sources":["D:/tesst/test/node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.js"],"sourcesContent":["import React, { memo, useContext } from 'react';\nimport { CheckIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { ComboboxListboxOptionContext } from '../../../../utilities/combobox/context.js';\nimport { ActionContext } from '../../../../utilities/listbox/context.js';\nimport styles from './TextOption.css.js';\nimport { Checkbox } from '../../../Checkbox/Checkbox.js';\nimport { Box } from '../../../Box/Box.js';\nimport { InlineStack } from '../../../InlineStack/InlineStack.js';\nimport { Icon } from '../../../Icon/Icon.js';\n\nconst TextOption = /*#__PURE__*/memo(function TextOption({\n  children,\n  selected,\n  disabled\n}) {\n  const {\n    allowMultiple\n  } = useContext(ComboboxListboxOptionContext);\n  const isAction = useContext(ActionContext);\n  const textOptionClassName = classNames(styles.TextOption, selected && !allowMultiple && styles.selected, disabled && styles.disabled, allowMultiple && styles.allowMultiple, isAction && styles.isAction);\n  const optionMarkup = selected ? /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\"\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    wrap: false,\n    align: \"space-between\",\n    gap: \"200\"\n  }, children, /*#__PURE__*/React.createElement(InlineStack, {\n    align: \"end\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: CheckIcon\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: textOptionClassName\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Content\n  }, allowMultiple && !isAction ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: disabled,\n    checked: selected,\n    label: children\n  })) : optionMarkup));\n});\n\nexport { TextOption };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,UAAU,QAAQ,OAAO;AAC/C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,4BAA4B,QAAQ,2CAA2C;AACxF,SAASC,aAAa,QAAQ,0CAA0C;AACxE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,GAAG,QAAQ,qBAAqB;AACzC,SAASC,WAAW,QAAQ,qCAAqC;AACjE,SAASC,IAAI,QAAQ,uBAAuB;AAE5C,MAAMC,UAAU,GAAG,aAAaX,IAAI,CAAC,SAASW,UAAUA,CAAAC,IAAA,EAIrD;EAAA,IAJsD;IACvDC,QAAQ;IACRC,QAAQ;IACRC;EACF,CAAC,GAAAH,IAAA;EACC,MAAM;IACJI;EACF,CAAC,GAAGf,UAAU,CAACG,4BAA4B,CAAC;EAC5C,MAAMa,QAAQ,GAAGhB,UAAU,CAACI,aAAa,CAAC;EAC1C,MAAMa,mBAAmB,GAAGf,UAAU,CAACG,MAAM,CAACK,UAAU,EAAEG,QAAQ,IAAI,CAACE,aAAa,IAAIV,MAAM,CAACQ,QAAQ,EAAEC,QAAQ,IAAIT,MAAM,CAACS,QAAQ,EAAEC,aAAa,IAAIV,MAAM,CAACU,aAAa,EAAEC,QAAQ,IAAIX,MAAM,CAACW,QAAQ,CAAC;EACzM,MAAME,YAAY,GAAGL,QAAQ,GAAG,aAAaf,KAAK,CAACqB,aAAa,CAACZ,GAAG,EAAE;IACpEa,KAAK,EAAE;EACT,CAAC,EAAE,aAAatB,KAAK,CAACqB,aAAa,CAACX,WAAW,EAAE;IAC/Ca,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,eAAe;IACtBC,GAAG,EAAE;EACP,CAAC,EAAEX,QAAQ,EAAE,aAAad,KAAK,CAACqB,aAAa,CAACX,WAAW,EAAE;IACzDc,KAAK,EAAE;EACT,CAAC,EAAE,aAAaxB,KAAK,CAACqB,aAAa,CAACV,IAAI,EAAE;IACxCe,MAAM,EAAEvB;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAaH,KAAK,CAACqB,aAAa,CAACrB,KAAK,CAAC2B,QAAQ,EAAE,IAAI,EAAEb,QAAQ,CAAC;EACxE,OAAO,aAAad,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IAC7CO,SAAS,EAAET;EACb,CAAC,EAAE,aAAanB,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IACzCO,SAAS,EAAErB,MAAM,CAACsB;EACpB,CAAC,EAAEZ,aAAa,IAAI,CAACC,QAAQ,GAAG,aAAalB,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IACtEO,SAAS,EAAErB,MAAM,CAACC;EACpB,CAAC,EAAE,aAAaR,KAAK,CAACqB,aAAa,CAACb,QAAQ,EAAE;IAC5CQ,QAAQ,EAAEA,QAAQ;IAClBc,OAAO,EAAEf,QAAQ;IACjBgB,KAAK,EAAEjB;EACT,CAAC,CAAC,CAAC,GAAGM,YAAY,CAAC,CAAC;AACtB,CAAC,CAAC;AAEF,SAASR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}