{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\n\n/**\r\n * Copy text to the native clipboard using the `navigator.clipboard` API\r\n * Adapted from https://www.benmvp.com/blog/copy-to-clipboard-react-custom-hook\r\n */\nfunction useCopyToClipboard(options = {}) {\n  const {\n    defaultValue = '',\n    timeout = 1500\n  } = options;\n  const [status, setStatus] = useState('inactive');\n  const copy = useCallback(value => {\n    navigator.clipboard.writeText(typeof value === 'string' ? value : defaultValue).then(() => setStatus('copied'), () => setStatus('failed')).catch(error => {\n      throw error;\n    });\n  }, [defaultValue]);\n  useEffect(() => {\n    if (status === 'inactive') return;\n    const timeoutId = setTimeout(() => setStatus('inactive'), timeout);\n    return () => clearTimeout(timeoutId);\n  }, [status, timeout]);\n  return [copy, status];\n}\nexport { useCopyToClipboard };","map":{"version":3,"names":["useState","useCallback","useEffect","useCopyToClipboard","options","defaultValue","timeout","status","setStatus","copy","value","navigator","clipboard","writeText","then","catch","error","timeoutId","setTimeout","clearTimeout"],"sources":["D:/Orichi_test/4. Form_Discount/test/node_modules/@shopify/polaris/build/esm/utilities/use-copy-to-clipboard.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\n\r\n/**\r\n * Copy text to the native clipboard using the `navigator.clipboard` API\r\n * Adapted from https://www.benmvp.com/blog/copy-to-clipboard-react-custom-hook\r\n */\r\nfunction useCopyToClipboard(options = {}) {\r\n  const {\r\n    defaultValue = '',\r\n    timeout = 1500\r\n  } = options;\r\n  const [status, setStatus] = useState('inactive');\r\n  const copy = useCallback(value => {\r\n    navigator.clipboard.writeText(typeof value === 'string' ? value : defaultValue).then(() => setStatus('copied'), () => setStatus('failed')).catch(error => {\r\n      throw error;\r\n    });\r\n  }, [defaultValue]);\r\n  useEffect(() => {\r\n    if (status === 'inactive') return;\r\n    const timeoutId = setTimeout(() => setStatus('inactive'), timeout);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [status, timeout]);\r\n  return [copy, status];\r\n}\r\n\r\nexport { useCopyToClipboard };\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;;AAExD;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EACxC,MAAM;IACJC,YAAY,GAAG,EAAE;IACjBC,OAAO,GAAG;EACZ,CAAC,GAAGF,OAAO;EACX,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,UAAU,CAAC;EAChD,MAAMS,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAI;IAChCC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC,OAAOH,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGL,YAAY,CAAC,CAACS,IAAI,CAAC,MAAMN,SAAS,CAAC,QAAQ,CAAC,EAAE,MAAMA,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACO,KAAK,CAACC,KAAK,IAAI;MACxJ,MAAMA,KAAK;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAClBH,SAAS,CAAC,MAAM;IACd,IAAIK,MAAM,KAAK,UAAU,EAAE;IAC3B,MAAMU,SAAS,GAAGC,UAAU,CAAC,MAAMV,SAAS,CAAC,UAAU,CAAC,EAAEF,OAAO,CAAC;IAClE,OAAO,MAAMa,YAAY,CAACF,SAAS,CAAC;EACtC,CAAC,EAAE,CAACV,MAAM,EAAED,OAAO,CAAC,CAAC;EACrB,OAAO,CAACG,IAAI,EAAEF,MAAM,CAAC;AACvB;AAEA,SAASJ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}