{"ast":null,"code":"import { useCallback } from 'react';\n\n/**\r\n * useDisableInteraction provides the original event handler but disables interaction\r\n * if the boolean passed is true.\r\n * @param disabled - A boolean value that determines if the button should\r\n * be disabled\r\n * @param handleEvent - The original event handler\r\n * @returns Function - The original event handler but with interactions disabled if the\r\n * provided boolean is true\r\n * @example\r\n * function ComponentExample() {\r\n * const handleClick = () => {\r\n *  console.log('disable me');\r\n * };\r\n * const handleClickEvent = useDisableInteraction(true, handleClick);\r\n * return <button onClick={handleClickEvent}>Im Disabled</button>;\r\n * }\r\n */\n\nfunction useDisableClick(disabled, handleClick) {\n  const handleClickWrapper = useCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, [disabled]);\n  if (!disabled) {\n    return handleClick;\n  }\n  return handleClickWrapper;\n}\nexport { useDisableClick };","map":{"version":3,"names":["useCallback","useDisableClick","disabled","handleClick","handleClickWrapper","event","preventDefault","stopPropagation"],"sources":["D:/Orichi_test/4. Form_Discount/test/node_modules/@shopify/polaris/build/esm/utilities/use-disable-interaction.js"],"sourcesContent":["import { useCallback } from 'react';\r\n\r\n/**\r\n * useDisableInteraction provides the original event handler but disables interaction\r\n * if the boolean passed is true.\r\n * @param disabled - A boolean value that determines if the button should\r\n * be disabled\r\n * @param handleEvent - The original event handler\r\n * @returns Function - The original event handler but with interactions disabled if the\r\n * provided boolean is true\r\n * @example\r\n * function ComponentExample() {\r\n * const handleClick = () => {\r\n *  console.log('disable me');\r\n * };\r\n * const handleClickEvent = useDisableInteraction(true, handleClick);\r\n * return <button onClick={handleClickEvent}>Im Disabled</button>;\r\n * }\r\n */\r\n\r\nfunction useDisableClick(disabled, handleClick) {\r\n  const handleClickWrapper = useCallback(event => {\r\n    if (disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }, [disabled]);\r\n  if (!disabled) {\r\n    return handleClick;\r\n  }\r\n  return handleClickWrapper;\r\n}\r\n\r\nexport { useDisableClick };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAC9C,MAAMC,kBAAkB,GAAGJ,WAAW,CAACK,KAAK,IAAI;IAC9C,IAAIH,QAAQ,EAAE;MACZG,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBD,KAAK,CAACE,eAAe,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EACd,IAAI,CAACA,QAAQ,EAAE;IACb,OAAOC,WAAW;EACpB;EACA,OAAOC,kBAAkB;AAC3B;AAEA,SAASH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}