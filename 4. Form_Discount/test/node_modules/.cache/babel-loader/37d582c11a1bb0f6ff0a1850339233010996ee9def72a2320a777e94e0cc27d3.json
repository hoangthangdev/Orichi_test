{"ast":null,"code":"import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { SortAscendingIcon, SortDescendingIcon } from '@shopify/polaris-icons';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { useIsomorphicLayoutEffect } from '../../utilities/use-isomorphic-layout-effect.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.css.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Pagination } from '../Pagination/Pagination.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Text } from '../Text/Text.js';\nimport { LegacyStack } from '../LegacyStack/LegacyStack.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nconst SCROLL_BAR_PADDING = 16;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase(_ref) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort,\n    paginatedSelectAllActionText,\n    lastColumnSticky = false,\n    sortable,\n    sortDirection,\n    defaultSortDirection = 'descending',\n    sortColumnIndex,\n    onSort,\n    sortToggleLabels,\n    hasZebraStriping,\n    pagination,\n    ...restProps\n  } = _ref;\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const tableBodyElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(true);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const lastSortedColumnIndex = useRef(sortColumnIndex);\n  const renderAfterSelectEvent = useRef(false);\n  const lastSelectedItemsCount = useRef(0);\n  const hasSelected = useRef(false);\n  if (selectedItemsCount !== lastSelectedItemsCount.current) {\n    renderAfterSelectEvent.current = true;\n    lastSelectedItemsCount.current = selectedItemsCount;\n  }\n  if (!hasSelected.current && selectedItemsCount !== 0) {\n    hasSelected.current = true;\n  }\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n    tableBodyElement.current = node;\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    }\n\n    // update left offset for first column\n    if (selectable && tableHeadings.current.length > 1) {\n      tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      if (stickyTableHeadings.current?.length) {\n        stickyTableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      }\n    }\n\n    // update sticky header min-widths to match table widths\n    if (stickyTableHeadings.current?.length) {\n      stickyTableHeadings.current.forEach((heading, index) => {\n        heading.style.minWidth = `${tableHeadingRects.current[index]?.offsetWidth || 0}px`;\n      });\n    }\n  }), [selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(scrollContainerElement.current?.offsetWidth === tableElement.current?.offsetWidth);\n    }\n  }, [tableInitialized]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;\n    // Don't consider the last column in the calculations if it's not sticky\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;\n    // Secure some space for the remaining columns to be visible\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    // hide the scrollbar when resizing\n    scrollBarElement.current?.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const headingsMarkup = headings.map((heading, index) => renderHeading(heading, index, 'th', {\n    'data-index-table-heading': true\n  }, heading.id));\n  const stickyHeadingsMarkup = headings.map((heading, index) =>\n  // NOTE: No id since it would be a duplicate of the non-sticky header's id\n  renderHeading(heading, index, 'div', {\n    'data-index-table-sticky-heading': true\n  }));\n  const [selectedItemsCountValue, setSelectedItemsCountValue] = useState(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n  useEffect(() => {\n    if (selectedItemsCount === SELECT_ALL_ITEMS || selectedItemsCount > 0) {\n      setSelectedItemsCountValue(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n    }\n  }, [selectedItemsCount, itemCount]);\n  const selectAllActionsLabel = i18n.translate('Polaris.IndexTable.selected', {\n    selectedItemsCount: selectedItemsCountValue\n  });\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.LoadingPanel, loading && styles.LoadingPanelEntered)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  }))));\n  const stickyTableClassNames = classNames(styles.StickyTable, hasMoreLeftColumns && styles['StickyTable-scrolling'], condensed && styles['StickyTable-condensed']);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky'],\n    // Has a sticky left column enabled\n    canFitStickyColumn && styles['StickyTableHeader-sticky'],\n    // ie; is scrolled to the right\n    hasMoreLeftColumns && styles['StickyTableHeader-scrolling'],\n    // Has a sticky right column enabled\n    canFitStickyColumn && lastColumnSticky && styles['StickyTableHeader-sticky-last'],\n    // ie; is scrolled to the left\n    canFitStickyColumn && lastColumnSticky && canScrollRight && styles['StickyTableHeader-sticky-scrolling']);\n    const bulkActionsClassName = classNames(styles.BulkActionsWrapper, selectMode && styles.BulkActionsWrapperVisible, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionsMarkup = shouldShowActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionsClassName\n    }, /*#__PURE__*/React.createElement(BulkActions, {\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      promotedActions: promotedActions,\n      actions: actions,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n      label: selectAllActionsLabel,\n      buttonSize: \"micro\"\n    })) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, headerMarkup, bulkActionsMarkup);\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, pagination && styles.ScrollBarContainerWithPagination, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable?.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling'], hasZebraStriping && styles.ZebraStriping);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), stickyHeaderMarkup);\n  const condensedClassNames = classNames(styles.CondensedList, hasZebraStriping && styles.ZebraStriping);\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: condensedClassNames,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const paginationMarkup = pagination ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.PaginationWrapper\n  }, /*#__PURE__*/React.createElement(Pagination, Object.assign({\n    type: \"table\"\n  }, pagination))) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTableWrapper\n  }, !condensed && loadingMarkup, tableContentMarkup, scrollBarMarkup, paginationMarkup)));\n  function renderHeading(heading, index, Tag, tagProps, id) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable?.some(value => value === true);\n    const headingAlignment = heading.alignment || 'start';\n    const headingContentClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      id: id,\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      style: stickyPositioningStyle\n    }, tagProps), renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      className: checkboxClassName,\n      key: `${heading}-${index}`\n    }, tagProps), renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    renderAfterSelectEvent.current = false;\n    hasSelected.current = false;\n    lastSortedColumnIndex.current = sortColumnIndex;\n    onSort?.(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    const defaultTooltipProps = {\n      width: heading.tooltipWidth ?? 'default',\n      activatorWrapper: 'div',\n      dismissOnMouseOut: true,\n      persistOnClick: heading.tooltipPersistsOnClick\n    };\n    const defaultHeaderTooltipProps = {\n      ...defaultTooltipProps,\n      padding: '400',\n      borderRadius: '200',\n      content: heading.tooltipContent,\n      preferredPosition: 'above'\n    };\n    const headingTitle = /*#__PURE__*/React.createElement(Text, {\n      as: \"span\",\n      variant: \"bodySm\",\n      fontWeight: \"medium\",\n      visuallyHidden: heading.hidden\n    }, heading.title);\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(LegacyStack, {\n        wrap: false,\n        alignment: \"center\"\n      }, headingTitle, /*#__PURE__*/React.createElement(Badge, {\n        tone: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else {\n      headingContent = headingTitle;\n    }\n    const style = {\n      '--pc-index-table-heading-extra-padding-right': heading.paddingBlockEnd ? `var(--p-space-${heading.paddingBlockEnd})` : '0'\n    };\n    if (sortable?.[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;\n      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;\n      let SourceComponent = newDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, heading?.alignment === 'end' && styles['TableHeadingSortIcon-heading-align-end'], isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const defaultSortButtonProps = {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: classNames(styles.TableHeadingSortButton, !isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end'], isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-currently-sorted'], isPreviouslySorted && !isRenderAfterSelectEvent && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-previously-sorted']),\n        tabIndex: selectMode ? -1 : 0\n      };\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles.TableHeadingTooltipUnderlinePlaceholder)\n      }, headingContent));\n      if (!sortToggleLabels || selectMode) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.SortableTableHeadingWithCustomMarkup\n        }, sortMarkup);\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;\n      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];\n      if (!heading.tooltipContent) {\n        return (/*#__PURE__*/\n          // Regular header with sort icon and sort direction tooltip\n          React.createElement(\"div\", {\n            style: style,\n            className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n          }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), sortMarkup))\n        );\n      }\n      if (heading.tooltipContent) {\n        return (/*#__PURE__*/\n          // Header text and sort icon have separate tooltips\n          React.createElement(\"div\", {\n            className: classNames(styles.SortableTableHeadingWithCustomMarkup, heading.paddingBlockEnd && styles['TableHeading-extra-padding-right']),\n            style: style\n          }, /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, /*#__PURE__*/React.createElement(Tooltip, defaultHeaderTooltipProps, /*#__PURE__*/React.createElement(\"span\", {\n            className: styles.TableHeadingUnderline\n          }, headingContent)), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), iconMarkup)))\n        );\n      }\n    }\n    if (heading.tooltipContent) {\n      return (/*#__PURE__*/\n        // Non-sortable header with tooltip\n        React.createElement(\"div\", {\n          style: style,\n          className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n        }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {\n          activatorWrapper: \"span\"\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(styles.TableHeadingUnderline, styles.SortableTableHeaderWrapper)\n        }, headingContent)))\n      );\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n    }, headingContent);\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText ?? i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\nfunction getHeadingKey(heading) {\n  if (heading.id) {\n    return heading.id;\n  } else if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable = true,\n    itemCount,\n    selectedItemsCount = 0,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange,\n    paginatedSelectAllText,\n    ...indexTableBaseProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable && !condensed,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange,\n    paginatedSelectAllText: paginatedSelectAllText\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children)));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\nexport { IndexTable };","map":{"version":3,"names":["React","useRef","useState","useCallback","useMemo","useEffect","SortAscendingIcon","SortDescendingIcon","debounce","useToggle","useIsomorphicLayoutEffect","classNames","styles","IndexProvider","Row","SELECT_ALL_ITEMS","SelectionType","getTableHeadingsBySelector","EmptySearchResult","ScrollContainer","BulkActions","Cell","useIndexValue","useIndexSelectionChange","useI18n","Spinner","AfterInitialMount","EventListener","Pagination","Checkbox","Text","LegacyStack","Badge","UnstyledButton","Tooltip","Sticky","SCROLL_BAR_PADDING","SCROLL_BAR_DEBOUNCE_PERIOD","IndexTableBase","_ref","headings","bulkActions","promotedBulkActions","children","emptyState","sort","paginatedSelectAllActionText","lastColumnSticky","sortable","sortDirection","defaultSortDirection","sortColumnIndex","onSort","sortToggleLabels","hasZebraStriping","pagination","restProps","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectMode","selectable","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","tableBodyElement","condensedListElement","tableInitialized","setTableInitialized","stickyWrapper","setStickyWrapper","hideScrollContainer","setHideScrollContainer","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","firstStickyHeaderElement","stickyHeaderElement","scrollBarElement","scrollContainerElement","scrollingWithBar","scrollingContainer","lastSortedColumnIndex","renderAfterSelectEvent","lastSelectedItemsCount","hasSelected","current","tableBodyRef","node","handleSelectAllItemsInStore","Page","All","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetWidth","offsetLeft","length","style","forEach","index","minWidth","resizeTableScrollBar","setProperty","debounceResizeTableScrollbar","trailing","canScrollRight","setCanScrollRight","handleCanScrollRight","tableRect","scrollableRect","width","canFitStickyColumn","setCanFitStickyColumn","handleCanFitStickyColumn","checkboxColumnWidth","firstStickyColumnWidth","lastColumnIsNotTheFirst","lastStickyColumnWidth","restOfContentMinWidth","handleResize","handleScrollContainerScroll","canScrollLeft","scrollLeft","handleScrollBarScroll","headingsMarkup","renderHeading","id","stickyHeadingsMarkup","selectedItemsCountValue","setSelectedItemsCountValue","selectAllActionsLabel","translate","handleTogglePage","Boolean","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingMarkup","createElement","className","LoadingPanel","LoadingPanelEntered","LoadingPanelRow","size","LoadingPanelText","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowActions","promotedActions","actions","stickyHeaderMarkup","role","boundingElement","isSticky","stickyHeaderClassNames","StickyTableHeader","bulkActionsClassName","BulkActionsWrapper","BulkActionsWrapperVisible","bulkActionsMarkup","onToggleAll","accessibilityLabel","selected","onSelectModeToggle","handleSelectModeToggle","undefined","label","buttonSize","headerMarkup","HeaderWrapper","unselectable","ref","StickyTableHeadings","Fragment","scrollBarWrapperClassNames","ScrollBarContainer","ScrollBarContainerWithPagination","scrollBarContainerCondensed","scrollBarContainerHidden","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onMount","onScroll","ScrollBar","isSortable","some","tableClassNames","Table","disableTextSelection","ZebraStriping","emptyStateMarkup","title","description","withIllustration","sharedMarkup","event","handler","condensedClassNames","CondensedList","bodyMarkup","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","paginationMarkup","PaginationWrapper","Object","assign","type","IndexTable","IndexTableWrapper","Tag","tagProps","isSecond","isLast","hasSortable","headingAlignment","alignment","headingContentClassName","TableHeading","hidden","flush","stickyPositioningStyle","headingContent","key","getHeadingKey","renderHeadingContent","checkboxClassName","checkboxContent","renderCheckboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","handleSortHeadingClick","direction","defaultTooltipProps","tooltipWidth","activatorWrapper","dismissOnMouseOut","persistOnClick","tooltipPersistsOnClick","defaultHeaderTooltipProps","padding","borderRadius","content","tooltipContent","preferredPosition","headingTitle","as","variant","fontWeight","visuallyHidden","new","wrap","tone","paddingBlockEnd","isCurrentlySorted","isPreviouslySorted","isRenderAfterSelectEvent","isAscending","newDirection","SourceComponent","iconMarkup","TableHeadingSortIcon","focusable","TableHeadingSortSvg","defaultSortButtonProps","onClick","TableHeadingSortButton","tabIndex","sortMarkup","TableHeadingTooltipUnderlinePlaceholder","SortableTableHeadingWithCustomMarkup","tooltipDirection","sortTooltipContent","TableHeadingUnderline","SortableTableHeaderWrapper","customActionText","itemsLength","actionText","onAction","_ref2","passedResourceName","onSelectionChange","indexTableBaseProps"],"sources":["D:/tesst/test/node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { SortAscendingIcon, SortDescendingIcon } from '@shopify/polaris-icons';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { useIsomorphicLayoutEffect } from '../../utilities/use-isomorphic-layout-effect.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.css.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Pagination } from '../Pagination/Pagination.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Text } from '../Text/Text.js';\nimport { LegacyStack } from '../LegacyStack/LegacyStack.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\n\nconst SCROLL_BAR_PADDING = 16;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort,\n  paginatedSelectAllActionText,\n  lastColumnSticky = false,\n  sortable,\n  sortDirection,\n  defaultSortDirection = 'descending',\n  sortColumnIndex,\n  onSort,\n  sortToggleLabels,\n  hasZebraStriping,\n  pagination,\n  ...restProps\n}) {\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const tableBodyElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(true);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const lastSortedColumnIndex = useRef(sortColumnIndex);\n  const renderAfterSelectEvent = useRef(false);\n  const lastSelectedItemsCount = useRef(0);\n  const hasSelected = useRef(false);\n  if (selectedItemsCount !== lastSelectedItemsCount.current) {\n    renderAfterSelectEvent.current = true;\n    lastSelectedItemsCount.current = selectedItemsCount;\n  }\n  if (!hasSelected.current && selectedItemsCount !== 0) {\n    hasSelected.current = true;\n  }\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n    tableBodyElement.current = node;\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    }\n\n    // update left offset for first column\n    if (selectable && tableHeadings.current.length > 1) {\n      tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      if (stickyTableHeadings.current?.length) {\n        stickyTableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      }\n    }\n\n    // update sticky header min-widths to match table widths\n    if (stickyTableHeadings.current?.length) {\n      stickyTableHeadings.current.forEach((heading, index) => {\n        heading.style.minWidth = `${tableHeadingRects.current[index]?.offsetWidth || 0}px`;\n      });\n    }\n  }), [selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(scrollContainerElement.current?.offsetWidth === tableElement.current?.offsetWidth);\n    }\n  }, [tableInitialized]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;\n    // Don't consider the last column in the calculations if it's not sticky\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;\n    // Secure some space for the remaining columns to be visible\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    // hide the scrollbar when resizing\n    scrollBarElement.current?.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const headingsMarkup = headings.map((heading, index) => renderHeading(heading, index, 'th', {\n    'data-index-table-heading': true\n  }, heading.id));\n  const stickyHeadingsMarkup = headings.map((heading, index) =>\n  // NOTE: No id since it would be a duplicate of the non-sticky header's id\n  renderHeading(heading, index, 'div', {\n    'data-index-table-sticky-heading': true\n  }));\n  const [selectedItemsCountValue, setSelectedItemsCountValue] = useState(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n  useEffect(() => {\n    if (selectedItemsCount === SELECT_ALL_ITEMS || selectedItemsCount > 0) {\n      setSelectedItemsCountValue(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n    }\n  }, [selectedItemsCount, itemCount]);\n  const selectAllActionsLabel = i18n.translate('Polaris.IndexTable.selected', {\n    selectedItemsCount: selectedItemsCountValue\n  });\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.LoadingPanel, loading && styles.LoadingPanelEntered)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  }))));\n  const stickyTableClassNames = classNames(styles.StickyTable, hasMoreLeftColumns && styles['StickyTable-scrolling'], condensed && styles['StickyTable-condensed']);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky'],\n    // Has a sticky left column enabled\n    canFitStickyColumn && styles['StickyTableHeader-sticky'],\n    // ie; is scrolled to the right\n    hasMoreLeftColumns && styles['StickyTableHeader-scrolling'],\n    // Has a sticky right column enabled\n    canFitStickyColumn && lastColumnSticky && styles['StickyTableHeader-sticky-last'],\n    // ie; is scrolled to the left\n    canFitStickyColumn && lastColumnSticky && canScrollRight && styles['StickyTableHeader-sticky-scrolling']);\n    const bulkActionsClassName = classNames(styles.BulkActionsWrapper, selectMode && styles.BulkActionsWrapperVisible, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionsMarkup = shouldShowActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionsClassName\n    }, /*#__PURE__*/React.createElement(BulkActions, {\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      promotedActions: promotedActions,\n      actions: actions,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n      label: selectAllActionsLabel,\n      buttonSize: \"micro\"\n    })) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, headerMarkup, bulkActionsMarkup);\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, pagination && styles.ScrollBarContainerWithPagination, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable?.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling'], hasZebraStriping && styles.ZebraStriping);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), stickyHeaderMarkup);\n  const condensedClassNames = classNames(styles.CondensedList, hasZebraStriping && styles.ZebraStriping);\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: condensedClassNames,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const paginationMarkup = pagination ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.PaginationWrapper\n  }, /*#__PURE__*/React.createElement(Pagination, Object.assign({\n    type: \"table\"\n  }, pagination))) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTableWrapper\n  }, !condensed && loadingMarkup, tableContentMarkup, scrollBarMarkup, paginationMarkup)));\n  function renderHeading(heading, index, Tag, tagProps, id) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable?.some(value => value === true);\n    const headingAlignment = heading.alignment || 'start';\n    const headingContentClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      id: id,\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      style: stickyPositioningStyle\n    }, tagProps), renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      className: checkboxClassName,\n      key: `${heading}-${index}`\n    }, tagProps), renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    renderAfterSelectEvent.current = false;\n    hasSelected.current = false;\n    lastSortedColumnIndex.current = sortColumnIndex;\n    onSort?.(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    const defaultTooltipProps = {\n      width: heading.tooltipWidth ?? 'default',\n      activatorWrapper: 'div',\n      dismissOnMouseOut: true,\n      persistOnClick: heading.tooltipPersistsOnClick\n    };\n    const defaultHeaderTooltipProps = {\n      ...defaultTooltipProps,\n      padding: '400',\n      borderRadius: '200',\n      content: heading.tooltipContent,\n      preferredPosition: 'above'\n    };\n    const headingTitle = /*#__PURE__*/React.createElement(Text, {\n      as: \"span\",\n      variant: \"bodySm\",\n      fontWeight: \"medium\",\n      visuallyHidden: heading.hidden\n    }, heading.title);\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(LegacyStack, {\n        wrap: false,\n        alignment: \"center\"\n      }, headingTitle, /*#__PURE__*/React.createElement(Badge, {\n        tone: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else {\n      headingContent = headingTitle;\n    }\n    const style = {\n      '--pc-index-table-heading-extra-padding-right': heading.paddingBlockEnd ? `var(--p-space-${heading.paddingBlockEnd})` : '0'\n    };\n    if (sortable?.[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;\n      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;\n      let SourceComponent = newDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, heading?.alignment === 'end' && styles['TableHeadingSortIcon-heading-align-end'], isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const defaultSortButtonProps = {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: classNames(styles.TableHeadingSortButton, !isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end'], isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-currently-sorted'], isPreviouslySorted && !isRenderAfterSelectEvent && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-previously-sorted']),\n        tabIndex: selectMode ? -1 : 0\n      };\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles.TableHeadingTooltipUnderlinePlaceholder)\n      }, headingContent));\n      if (!sortToggleLabels || selectMode) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.SortableTableHeadingWithCustomMarkup\n        }, sortMarkup);\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;\n      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];\n      if (!heading.tooltipContent) {\n        return (\n          /*#__PURE__*/\n          // Regular header with sort icon and sort direction tooltip\n          React.createElement(\"div\", {\n            style: style,\n            className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n          }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), sortMarkup))\n        );\n      }\n      if (heading.tooltipContent) {\n        return (\n          /*#__PURE__*/\n          // Header text and sort icon have separate tooltips\n          React.createElement(\"div\", {\n            className: classNames(styles.SortableTableHeadingWithCustomMarkup, heading.paddingBlockEnd && styles['TableHeading-extra-padding-right']),\n            style: style\n          }, /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, /*#__PURE__*/React.createElement(Tooltip, defaultHeaderTooltipProps, /*#__PURE__*/React.createElement(\"span\", {\n            className: styles.TableHeadingUnderline\n          }, headingContent)), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), iconMarkup)))\n        );\n      }\n    }\n    if (heading.tooltipContent) {\n      return (\n        /*#__PURE__*/\n        // Non-sortable header with tooltip\n        React.createElement(\"div\", {\n          style: style,\n          className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n        }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {\n          activatorWrapper: \"span\"\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(styles.TableHeadingUnderline, styles.SortableTableHeaderWrapper)\n        }, headingContent)))\n      );\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n    }, headingContent);\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText ?? i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\nfunction getHeadingKey(heading) {\n  if (heading.id) {\n    return heading.id;\n  } else if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable({\n  children,\n  selectable = true,\n  itemCount,\n  selectedItemsCount = 0,\n  resourceName: passedResourceName,\n  loading,\n  hasMoreItems,\n  condensed,\n  onSelectionChange,\n  paginatedSelectAllText,\n  ...indexTableBaseProps\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable && !condensed,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange,\n    paginatedSelectAllText: paginatedSelectAllText\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children)));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\n\nexport { IndexTable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}