{"ast":null,"code":"import { isElementInViewport } from './is-element-in-viewport.js';\nconst FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled=\"true\"]):not([tabindex=\"-1\"]):not(:disabled),*[tabindex]';\nconst KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled=\"true\"]):not([tabindex=\"-1\"]):not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\nconst MENUITEM_FOCUSABLE_SELECTORS = 'a[role=\"menuitem\"],frame[role=\"menuitem\"],iframe[role=\"menuitem\"],input[role=\"menuitem\"]:not([type=hidden]):not(:disabled),select[role=\"menuitem\"]:not(:disabled),textarea[role=\"menuitem\"]:not(:disabled),button[role=\"menuitem\"]:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\nconst handleMouseUpByBlurring = ({\n  currentTarget\n}) => currentTarget.blur();\nfunction nextFocusableNode(node, filter) {\n  const allFocusableElements = [...document.querySelectorAll(FOCUSABLE_SELECTOR)];\n  const sliceLocation = allFocusableElements.indexOf(node) + 1;\n  const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);\n  for (const focusableElement of focusableElementsAfterNode) {\n    if (isElementInViewport(focusableElement) && (!filter || filter && filter(focusableElement))) {\n      return focusableElement;\n    }\n  }\n  return null;\n}\nfunction findFirstFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {\n    return element;\n  }\n  return element.querySelector(FOCUSABLE_SELECTOR);\n}\n\n// Popover needs to be able to find its activator even if it is disabled, which FOCUSABLE_SELECTOR doesn't support.\nfunction findFirstFocusableNodeIncludingDisabled(element) {\n  const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;\n  if (matches(element, focusableSelector)) {\n    return element;\n  }\n  return element.querySelector(focusableSelector);\n}\nfunction focusFirstFocusableNode(element, onlyDescendants = true) {\n  findFirstFocusableNode(element, onlyDescendants)?.focus();\n}\nfunction focusNextFocusableNode(node, filter) {\n  const nextFocusable = nextFocusableNode(node, filter);\n  if (nextFocusable && nextFocusable instanceof HTMLElement) {\n    nextFocusable.focus();\n    return true;\n  }\n  return false;\n}\nfunction findFirstKeyboardFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);\n}\nfunction focusFirstKeyboardFocusableNode(element, onlyDescendants = true) {\n  const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);\n  if (firstFocusable) {\n    firstFocusable.focus();\n    return true;\n  }\n  return false;\n}\nfunction findLastKeyboardFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n  const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);\n  return allFocusable[allFocusable.length - 1];\n}\nfunction focusLastKeyboardFocusableNode(element, onlyDescendants = true) {\n  const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);\n  if (lastFocusable) {\n    lastFocusable.focus();\n    return true;\n  }\n  return false;\n}\nfunction wrapFocusPreviousFocusableMenuItem(parentElement, currentFocusedElement) {\n  const allFocusableChildren = getMenuFocusableDescendants(parentElement);\n  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\n  if (currentItemIdx === -1) {\n    allFocusableChildren[0].focus();\n  } else {\n    allFocusableChildren[(currentItemIdx - 1 + allFocusableChildren.length) % allFocusableChildren.length].focus();\n  }\n}\nfunction wrapFocusNextFocusableMenuItem(parentElement, currentFocusedElement) {\n  const allFocusableChildren = getMenuFocusableDescendants(parentElement);\n  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\n  if (currentItemIdx === -1) {\n    allFocusableChildren[0].focus();\n  } else {\n    allFocusableChildren[(currentItemIdx + 1) % allFocusableChildren.length].focus();\n  }\n}\nfunction getMenuFocusableDescendants(element) {\n  return element.querySelectorAll(MENUITEM_FOCUSABLE_SELECTORS);\n}\nfunction getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement) {\n  let currentItemIdx = 0;\n  for (const focusableChild of allFocusableChildren) {\n    if (focusableChild === currentFocusedElement) {\n      break;\n    }\n    currentItemIdx++;\n  }\n  return currentItemIdx === allFocusableChildren.length ? -1 : currentItemIdx;\n}\nfunction matches(node, selector) {\n  if (node.matches) {\n    return node.matches(selector);\n  }\n  const matches = (node.ownerDocument || document).querySelectorAll(selector);\n  let i = matches.length;\n  while (--i >= 0 && matches.item(i) !== node) return i > -1;\n}\nexport { findFirstFocusableNode, findFirstFocusableNodeIncludingDisabled, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode, focusNextFocusableNode, handleMouseUpByBlurring, nextFocusableNode, wrapFocusNextFocusableMenuItem, wrapFocusPreviousFocusableMenuItem };","map":{"version":3,"names":["isElementInViewport","FOCUSABLE_SELECTOR","KEYBOARD_FOCUSABLE_SELECTORS","MENUITEM_FOCUSABLE_SELECTORS","handleMouseUpByBlurring","currentTarget","blur","nextFocusableNode","node","filter","allFocusableElements","document","querySelectorAll","sliceLocation","indexOf","focusableElementsAfterNode","slice","focusableElement","findFirstFocusableNode","element","onlyDescendants","matches","querySelector","findFirstFocusableNodeIncludingDisabled","focusableSelector","focusFirstFocusableNode","focus","focusNextFocusableNode","nextFocusable","HTMLElement","findFirstKeyboardFocusableNode","focusFirstKeyboardFocusableNode","firstFocusable","findLastKeyboardFocusableNode","allFocusable","length","focusLastKeyboardFocusableNode","lastFocusable","wrapFocusPreviousFocusableMenuItem","parentElement","currentFocusedElement","allFocusableChildren","getMenuFocusableDescendants","currentItemIdx","getCurrentFocusedElementIndex","wrapFocusNextFocusableMenuItem","focusableChild","selector","ownerDocument","i","item"],"sources":["D:/Orichi_test/4. Form_Discount/test/node_modules/@shopify/polaris/build/esm/utilities/focus.js"],"sourcesContent":["import { isElementInViewport } from './is-element-in-viewport.js';\r\n\r\nconst FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled=\"true\"]):not([tabindex=\"-1\"]):not(:disabled),*[tabindex]';\r\nconst KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled=\"true\"]):not([tabindex=\"-1\"]):not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\r\nconst MENUITEM_FOCUSABLE_SELECTORS = 'a[role=\"menuitem\"],frame[role=\"menuitem\"],iframe[role=\"menuitem\"],input[role=\"menuitem\"]:not([type=hidden]):not(:disabled),select[role=\"menuitem\"]:not(:disabled),textarea[role=\"menuitem\"]:not(:disabled),button[role=\"menuitem\"]:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\r\nconst handleMouseUpByBlurring = ({\r\n  currentTarget\r\n}) => currentTarget.blur();\r\nfunction nextFocusableNode(node, filter) {\r\n  const allFocusableElements = [...document.querySelectorAll(FOCUSABLE_SELECTOR)];\r\n  const sliceLocation = allFocusableElements.indexOf(node) + 1;\r\n  const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);\r\n  for (const focusableElement of focusableElementsAfterNode) {\r\n    if (isElementInViewport(focusableElement) && (!filter || filter && filter(focusableElement))) {\r\n      return focusableElement;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction findFirstFocusableNode(element, onlyDescendants = true) {\r\n  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {\r\n    return element;\r\n  }\r\n  return element.querySelector(FOCUSABLE_SELECTOR);\r\n}\r\n\r\n// Popover needs to be able to find its activator even if it is disabled, which FOCUSABLE_SELECTOR doesn't support.\r\nfunction findFirstFocusableNodeIncludingDisabled(element) {\r\n  const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;\r\n  if (matches(element, focusableSelector)) {\r\n    return element;\r\n  }\r\n  return element.querySelector(focusableSelector);\r\n}\r\nfunction focusFirstFocusableNode(element, onlyDescendants = true) {\r\n  findFirstFocusableNode(element, onlyDescendants)?.focus();\r\n}\r\nfunction focusNextFocusableNode(node, filter) {\r\n  const nextFocusable = nextFocusableNode(node, filter);\r\n  if (nextFocusable && nextFocusable instanceof HTMLElement) {\r\n    nextFocusable.focus();\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction findFirstKeyboardFocusableNode(element, onlyDescendants = true) {\r\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\r\n    return element;\r\n  }\r\n  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);\r\n}\r\nfunction focusFirstKeyboardFocusableNode(element, onlyDescendants = true) {\r\n  const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);\r\n  if (firstFocusable) {\r\n    firstFocusable.focus();\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction findLastKeyboardFocusableNode(element, onlyDescendants = true) {\r\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\r\n    return element;\r\n  }\r\n  const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);\r\n  return allFocusable[allFocusable.length - 1];\r\n}\r\nfunction focusLastKeyboardFocusableNode(element, onlyDescendants = true) {\r\n  const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);\r\n  if (lastFocusable) {\r\n    lastFocusable.focus();\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction wrapFocusPreviousFocusableMenuItem(parentElement, currentFocusedElement) {\r\n  const allFocusableChildren = getMenuFocusableDescendants(parentElement);\r\n  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\r\n  if (currentItemIdx === -1) {\r\n    allFocusableChildren[0].focus();\r\n  } else {\r\n    allFocusableChildren[(currentItemIdx - 1 + allFocusableChildren.length) % allFocusableChildren.length].focus();\r\n  }\r\n}\r\nfunction wrapFocusNextFocusableMenuItem(parentElement, currentFocusedElement) {\r\n  const allFocusableChildren = getMenuFocusableDescendants(parentElement);\r\n  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\r\n  if (currentItemIdx === -1) {\r\n    allFocusableChildren[0].focus();\r\n  } else {\r\n    allFocusableChildren[(currentItemIdx + 1) % allFocusableChildren.length].focus();\r\n  }\r\n}\r\nfunction getMenuFocusableDescendants(element) {\r\n  return element.querySelectorAll(MENUITEM_FOCUSABLE_SELECTORS);\r\n}\r\nfunction getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement) {\r\n  let currentItemIdx = 0;\r\n  for (const focusableChild of allFocusableChildren) {\r\n    if (focusableChild === currentFocusedElement) {\r\n      break;\r\n    }\r\n    currentItemIdx++;\r\n  }\r\n  return currentItemIdx === allFocusableChildren.length ? -1 : currentItemIdx;\r\n}\r\nfunction matches(node, selector) {\r\n  if (node.matches) {\r\n    return node.matches(selector);\r\n  }\r\n  const matches = (node.ownerDocument || document).querySelectorAll(selector);\r\n  let i = matches.length;\r\n  while (--i >= 0 && matches.item(i) !== node) return i > -1;\r\n}\r\n\r\nexport { findFirstFocusableNode, findFirstFocusableNodeIncludingDisabled, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode, focusNextFocusableNode, handleMouseUpByBlurring, nextFocusableNode, wrapFocusNextFocusableMenuItem, wrapFocusPreviousFocusableMenuItem };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}