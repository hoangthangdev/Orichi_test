{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDeepCompareRef } from './use-deep-compare-ref.js';\n\n/**\r\n * A replacement for React's useCallback that'll allow for custom and deep compares.\r\n * @see {@link https://reactjs.org/docs/hooks-reference.html#usecallback}\r\n * @param callback Accepts a callback that's forwarded to React's useCallback\r\n * @param dependencies A dependency array similar to React's useCallback however it utilizes a deep compare\r\n * @param customCompare Opportunity to provide a custom compare function\r\n * @returns A memoized callback\r\n * @example\r\n * const Child = memo(function Child({onClick}) {\r\n *   console.log('Child has rendered.');\r\n *   return <button onClick={onClick}>Click me</button>;\r\n * });\r\n *\r\n * function ComponentExample() {\r\n *   const [timesClicked, setTimesClicked] = useState(0);\r\n *\r\n *   const handleClick = useDeepCallback(() => {\r\n *     setTimesClicked((timesClicked) => timesClicked + 1);\r\n *     // New reference every render\r\n *   }, [{}]);\r\n *\r\n *   return (\r\n *     <>\r\n *       <div>Times clicked: {timesClicked}</div>\r\n *       <Child onClick={handleClick} />\r\n *     </>\r\n *   );\r\n * }\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction useDeepCallback(callback, dependencies, customCompare) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(callback, useDeepCompareRef(dependencies, customCompare));\n}\nexport { useDeepCallback };","map":{"version":3,"names":["useCallback","useDeepCompareRef","useDeepCallback","callback","dependencies","customCompare"],"sources":["D:/Orichi_test/4. Form_Discount/test/node_modules/@shopify/polaris/build/esm/utilities/use-deep-callback.js"],"sourcesContent":["import { useCallback } from 'react';\r\nimport { useDeepCompareRef } from './use-deep-compare-ref.js';\r\n\r\n/**\r\n * A replacement for React's useCallback that'll allow for custom and deep compares.\r\n * @see {@link https://reactjs.org/docs/hooks-reference.html#usecallback}\r\n * @param callback Accepts a callback that's forwarded to React's useCallback\r\n * @param dependencies A dependency array similar to React's useCallback however it utilizes a deep compare\r\n * @param customCompare Opportunity to provide a custom compare function\r\n * @returns A memoized callback\r\n * @example\r\n * const Child = memo(function Child({onClick}) {\r\n *   console.log('Child has rendered.');\r\n *   return <button onClick={onClick}>Click me</button>;\r\n * });\r\n *\r\n * function ComponentExample() {\r\n *   const [timesClicked, setTimesClicked] = useState(0);\r\n *\r\n *   const handleClick = useDeepCallback(() => {\r\n *     setTimesClicked((timesClicked) => timesClicked + 1);\r\n *     // New reference every render\r\n *   }, [{}]);\r\n *\r\n *   return (\r\n *     <>\r\n *       <div>Times clicked: {timesClicked}</div>\r\n *       <Child onClick={handleClick} />\r\n *     </>\r\n *   );\r\n * }\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction useDeepCallback(callback, dependencies, customCompare) {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  return useCallback(callback, useDeepCompareRef(dependencies, customCompare));\r\n}\r\n\r\nexport { useDeepCallback };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,iBAAiB,QAAQ,2BAA2B;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,aAAa,EAAE;EAC9D;EACA,OAAOL,WAAW,CAACG,QAAQ,EAAEF,iBAAiB,CAACG,YAAY,EAAEC,aAAa,CAAC,CAAC;AAC9E;AAEA,SAASH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}