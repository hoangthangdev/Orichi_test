{"ast":null,"code":"import React, { useState, useMemo } from 'react';\nimport { SortIcon } from '@shopify/polaris-icons';\nimport { ChoiceList } from '../../../ChoiceList/ChoiceList.js';\nimport { DirectionButton } from './components/DirectionButton/DirectionButton.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Tooltip } from '../../../Tooltip/Tooltip.js';\nimport { Button } from '../../../Button/Button.js';\nimport { Popover } from '../../../Popover/Popover.js';\nimport { Box } from '../../../Box/Box.js';\nlet SortButtonDirection = /*#__PURE__*/function (SortButtonDirection) {\n  SortButtonDirection[\"Asc\"] = \"asc\";\n  SortButtonDirection[\"Desc\"] = \"desc\";\n  return SortButtonDirection;\n}({});\nfunction SortButton({\n  choices,\n  selected,\n  disabled,\n  disclosureZIndexOverride,\n  onChange,\n  onChangeKey,\n  onChangeDirection\n}) {\n  const i18n = useI18n();\n  const [active, setActive] = useState(false);\n  const [selectedValueKey, selectedDirection] = selected[0].split(' ');\n  function handleClick() {\n    setActive(pastActive => !pastActive);\n  }\n  function handleClose() {\n    setActive(false);\n  }\n  function handleChangeChoiceList(sel) {\n    if (onChangeKey) {\n      const [key] = sel[0].split(' ');\n      onChangeKey(key);\n    } else {\n      onChange(sel);\n    }\n  }\n  function handleChangeDirection(sel) {\n    if (onChangeDirection) {\n      const [, direction] = sel[0].split(' ');\n      onChangeDirection(direction);\n    } else {\n      onChange(sel);\n    }\n  }\n  const choiceListChoices = useMemo(() => {\n    const choiceCategories = choices.reduce((acc, curr) => {\n      const alreadyExists = acc.some(option => option.label === curr.label);\n      const [, currentValueDirection] = curr.value.split(' ');\n      const isSameDirection = currentValueDirection === selectedDirection;\n      if (!alreadyExists) {\n        return [...acc, curr];\n      }\n      if (isSameDirection) {\n        return acc.map(option => {\n          if (option.label === curr.label) {\n            return curr;\n          }\n          return option;\n        });\n      }\n      return acc;\n    }, []);\n    return choiceCategories;\n  }, [choices, selectedDirection]);\n  const selectedChoices = choices.filter(choice => {\n    const [currentKey] = choice.value.split(' ');\n    return currentKey === selectedValueKey;\n  });\n  const sortButton = /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.translate('Polaris.IndexFilters.SortButton.tooltip'),\n    preferredPosition: \"above\",\n    hoverDelay: 400,\n    zIndexOverride: disclosureZIndexOverride\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"slim\",\n    icon: SortIcon,\n    onClick: handleClick,\n    disabled: disabled,\n    accessibilityLabel: i18n.translate('Polaris.IndexFilters.SortButton.ariaLabel')\n  }));\n  return /*#__PURE__*/React.createElement(Popover, {\n    fluidContent: true,\n    active: active && !disabled,\n    activator: sortButton,\n    autofocusTarget: \"first-node\",\n    onClose: handleClose,\n    preferredAlignment: \"right\",\n    zIndexOverride: disclosureZIndexOverride\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: \"148px\",\n    paddingInlineStart: \"300\",\n    paddingInlineEnd: \"300\",\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"200\",\n    borderBlockEndWidth: \"025\",\n    borderColor: \"border-secondary\"\n  }, /*#__PURE__*/React.createElement(ChoiceList, {\n    title: i18n.translate('Polaris.IndexFilters.SortButton.title'),\n    choices: choiceListChoices,\n    selected: selected,\n    onChange: handleChangeChoiceList\n  })), /*#__PURE__*/React.createElement(Box, {\n    paddingInlineStart: \"150\",\n    paddingInlineEnd: \"150\",\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"200\"\n  }, /*#__PURE__*/React.createElement(DirectionButton, {\n    direction: \"asc\",\n    active: selectedDirection === SortButtonDirection.Asc,\n    onClick: handleChangeDirection,\n    value: selectedChoices?.[0]?.value\n  }, selectedChoices?.[0]?.directionLabel), /*#__PURE__*/React.createElement(DirectionButton, {\n    direction: \"desc\",\n    active: selectedDirection === SortButtonDirection.Desc,\n    onClick: handleChangeDirection,\n    value: selectedChoices?.[1]?.value\n  }, selectedChoices?.[1]?.directionLabel)));\n}\nexport { SortButton, SortButtonDirection };","map":{"version":3,"names":["React","useState","useMemo","SortIcon","ChoiceList","DirectionButton","useI18n","Tooltip","Button","Popover","Box","SortButtonDirection","SortButton","choices","selected","disabled","disclosureZIndexOverride","onChange","onChangeKey","onChangeDirection","i18n","active","setActive","selectedValueKey","selectedDirection","split","handleClick","pastActive","handleClose","handleChangeChoiceList","sel","key","handleChangeDirection","direction","choiceListChoices","choiceCategories","reduce","acc","curr","alreadyExists","some","option","label","currentValueDirection","value","isSameDirection","map","selectedChoices","filter","choice","currentKey","sortButton","createElement","content","translate","preferredPosition","hoverDelay","zIndexOverride","size","icon","onClick","accessibilityLabel","fluidContent","activator","autofocusTarget","onClose","preferredAlignment","minWidth","paddingInlineStart","paddingInlineEnd","paddingBlockStart","paddingBlockEnd","borderBlockEndWidth","borderColor","title","Asc","directionLabel","Desc"],"sources":["D:/Orichi_test/4. Form_Discount/test/node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/SortButton.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { SortIcon } from '@shopify/polaris-icons';\r\nimport { ChoiceList } from '../../../ChoiceList/ChoiceList.js';\r\nimport { DirectionButton } from './components/DirectionButton/DirectionButton.js';\r\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\r\nimport { Tooltip } from '../../../Tooltip/Tooltip.js';\r\nimport { Button } from '../../../Button/Button.js';\r\nimport { Popover } from '../../../Popover/Popover.js';\r\nimport { Box } from '../../../Box/Box.js';\r\n\r\nlet SortButtonDirection = /*#__PURE__*/function (SortButtonDirection) {\r\n  SortButtonDirection[\"Asc\"] = \"asc\";\r\n  SortButtonDirection[\"Desc\"] = \"desc\";\r\n  return SortButtonDirection;\r\n}({});\r\nfunction SortButton({\r\n  choices,\r\n  selected,\r\n  disabled,\r\n  disclosureZIndexOverride,\r\n  onChange,\r\n  onChangeKey,\r\n  onChangeDirection\r\n}) {\r\n  const i18n = useI18n();\r\n  const [active, setActive] = useState(false);\r\n  const [selectedValueKey, selectedDirection] = selected[0].split(' ');\r\n  function handleClick() {\r\n    setActive(pastActive => !pastActive);\r\n  }\r\n  function handleClose() {\r\n    setActive(false);\r\n  }\r\n  function handleChangeChoiceList(sel) {\r\n    if (onChangeKey) {\r\n      const [key] = sel[0].split(' ');\r\n      onChangeKey(key);\r\n    } else {\r\n      onChange(sel);\r\n    }\r\n  }\r\n  function handleChangeDirection(sel) {\r\n    if (onChangeDirection) {\r\n      const [, direction] = sel[0].split(' ');\r\n      onChangeDirection(direction);\r\n    } else {\r\n      onChange(sel);\r\n    }\r\n  }\r\n  const choiceListChoices = useMemo(() => {\r\n    const choiceCategories = choices.reduce((acc, curr) => {\r\n      const alreadyExists = acc.some(option => option.label === curr.label);\r\n      const [, currentValueDirection] = curr.value.split(' ');\r\n      const isSameDirection = currentValueDirection === selectedDirection;\r\n      if (!alreadyExists) {\r\n        return [...acc, curr];\r\n      }\r\n      if (isSameDirection) {\r\n        return acc.map(option => {\r\n          if (option.label === curr.label) {\r\n            return curr;\r\n          }\r\n          return option;\r\n        });\r\n      }\r\n      return acc;\r\n    }, []);\r\n    return choiceCategories;\r\n  }, [choices, selectedDirection]);\r\n  const selectedChoices = choices.filter(choice => {\r\n    const [currentKey] = choice.value.split(' ');\r\n    return currentKey === selectedValueKey;\r\n  });\r\n  const sortButton = /*#__PURE__*/React.createElement(Tooltip, {\r\n    content: i18n.translate('Polaris.IndexFilters.SortButton.tooltip'),\r\n    preferredPosition: \"above\",\r\n    hoverDelay: 400,\r\n    zIndexOverride: disclosureZIndexOverride\r\n  }, /*#__PURE__*/React.createElement(Button, {\r\n    size: \"slim\",\r\n    icon: SortIcon,\r\n    onClick: handleClick,\r\n    disabled: disabled,\r\n    accessibilityLabel: i18n.translate('Polaris.IndexFilters.SortButton.ariaLabel')\r\n  }));\r\n  return /*#__PURE__*/React.createElement(Popover, {\r\n    fluidContent: true,\r\n    active: active && !disabled,\r\n    activator: sortButton,\r\n    autofocusTarget: \"first-node\",\r\n    onClose: handleClose,\r\n    preferredAlignment: \"right\",\r\n    zIndexOverride: disclosureZIndexOverride\r\n  }, /*#__PURE__*/React.createElement(Box, {\r\n    minWidth: \"148px\",\r\n    paddingInlineStart: \"300\",\r\n    paddingInlineEnd: \"300\",\r\n    paddingBlockStart: \"200\",\r\n    paddingBlockEnd: \"200\",\r\n    borderBlockEndWidth: \"025\",\r\n    borderColor: \"border-secondary\"\r\n  }, /*#__PURE__*/React.createElement(ChoiceList, {\r\n    title: i18n.translate('Polaris.IndexFilters.SortButton.title'),\r\n    choices: choiceListChoices,\r\n    selected: selected,\r\n    onChange: handleChangeChoiceList\r\n  })), /*#__PURE__*/React.createElement(Box, {\r\n    paddingInlineStart: \"150\",\r\n    paddingInlineEnd: \"150\",\r\n    paddingBlockStart: \"200\",\r\n    paddingBlockEnd: \"200\"\r\n  }, /*#__PURE__*/React.createElement(DirectionButton, {\r\n    direction: \"asc\",\r\n    active: selectedDirection === SortButtonDirection.Asc,\r\n    onClick: handleChangeDirection,\r\n    value: selectedChoices?.[0]?.value\r\n  }, selectedChoices?.[0]?.directionLabel), /*#__PURE__*/React.createElement(DirectionButton, {\r\n    direction: \"desc\",\r\n    active: selectedDirection === SortButtonDirection.Desc,\r\n    onClick: handleChangeDirection,\r\n    value: selectedChoices?.[1]?.value\r\n  }, selectedChoices?.[1]?.directionLabel)));\r\n}\r\n\r\nexport { SortButton, SortButtonDirection };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}