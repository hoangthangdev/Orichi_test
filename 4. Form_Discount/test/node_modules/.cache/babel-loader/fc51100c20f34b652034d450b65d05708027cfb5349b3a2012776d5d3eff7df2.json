{"ast":null,"code":"import React, { useId } from 'react';\nimport styles from './ChoiceList.css.js';\nimport { Bleed } from '../Bleed/Bleed.js';\nimport { RadioButton } from '../RadioButton/RadioButton.js';\nimport { Box } from '../Box/Box.js';\nimport { errorTextID, InlineError } from '../InlineError/InlineError.js';\nimport { BlockStack } from '../BlockStack/BlockStack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Text } from '../Text/Text.js';\nfunction ChoiceList({\n  title,\n  titleHidden,\n  allowMultiple,\n  choices,\n  selected,\n  onChange = noop,\n  error,\n  disabled = false,\n  name: nameProp,\n  tone\n}) {\n  // Type asserting to any is required for TS3.2 but can be removed when we update to 3.3\n  // see https://github.com/Microsoft/TypeScript/issues/28768\n  const ControlComponent = allowMultiple ? Checkbox : RadioButton;\n  const uniqName = useId();\n  const name = nameProp ?? uniqName;\n  const finalName = allowMultiple ? `${name}[]` : name;\n  const titleMarkup = title ? /*#__PURE__*/React.createElement(Box, {\n    as: \"legend\",\n    paddingBlockEnd: {\n      xs: '0',\n      md: '100'\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodyMd\",\n    visuallyHidden: titleHidden\n  }, title)) : null;\n  const choicesMarkup = choices.map(choice => {\n    const {\n      value,\n      id,\n      label,\n      helpText,\n      disabled: choiceDisabled,\n      describedByError\n    } = choice;\n    function handleChange(checked) {\n      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);\n    }\n    const isSelected = choiceIsSelected(choice, selected);\n    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected) : null;\n    const children = renderedChildren ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ChoiceChildren\n    }, /*#__PURE__*/React.createElement(Box, {\n      paddingBlockStart: {\n        xs: '400',\n        md: '0'\n      }\n    }, renderedChildren)) : null;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: value\n    }, /*#__PURE__*/React.createElement(Bleed, {\n      marginBlockEnd: helpText ? {\n        xs: '100',\n        md: '0'\n      } : {\n        xs: '0'\n      }\n    }, /*#__PURE__*/React.createElement(ControlComponent, {\n      name: finalName,\n      value: value,\n      id: id,\n      label: label,\n      disabled: choiceDisabled || disabled,\n      fill: {\n        xs: true,\n        sm: false\n      },\n      checked: choiceIsSelected(choice, selected),\n      helpText: helpText,\n      onChange: handleChange,\n      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null,\n      tone: tone\n    }), children));\n  });\n  const errorMarkup = error && /*#__PURE__*/React.createElement(Box, {\n    paddingBlockStart: {\n      xs: '0',\n      md: '100'\n    },\n    paddingBlockEnd: \"200\"\n  }, /*#__PURE__*/React.createElement(InlineError, {\n    message: error,\n    fieldID: finalName\n  }));\n  return /*#__PURE__*/React.createElement(BlockStack, {\n    as: \"fieldset\",\n    gap: {\n      xs: '400',\n      md: '0'\n    },\n    \"aria-invalid\": error != null,\n    id: finalName\n  }, titleMarkup, /*#__PURE__*/React.createElement(BlockStack, {\n    as: \"ul\",\n    gap: {\n      xs: '400',\n      md: '0'\n    }\n  }, choicesMarkup), errorMarkup);\n}\nfunction noop() {}\nfunction choiceIsSelected({\n  value\n}, selected) {\n  return selected.includes(value);\n}\nfunction updateSelectedChoices({\n  value\n}, checked, selected, allowMultiple = false) {\n  if (checked) {\n    return allowMultiple ? [...selected, value] : [value];\n  }\n  return selected.filter(selectedChoice => selectedChoice !== value);\n}\nexport { ChoiceList };","map":{"version":3,"names":["React","useId","styles","Bleed","RadioButton","Box","errorTextID","InlineError","BlockStack","Checkbox","Text","ChoiceList","title","titleHidden","allowMultiple","choices","selected","onChange","noop","error","disabled","name","nameProp","tone","ControlComponent","uniqName","finalName","titleMarkup","createElement","as","paddingBlockEnd","xs","md","variant","visuallyHidden","choicesMarkup","map","choice","value","id","label","helpText","choiceDisabled","describedByError","handleChange","checked","updateSelectedChoices","isSelected","choiceIsSelected","renderedChildren","renderChildren","children","className","ChoiceChildren","paddingBlockStart","key","marginBlockEnd","fill","sm","ariaDescribedBy","errorMarkup","message","fieldID","gap","includes","filter","selectedChoice"],"sources":["D:/Orichi_test/4. Form_Discount/test/node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.js"],"sourcesContent":["import React, { useId } from 'react';\r\nimport styles from './ChoiceList.css.js';\r\nimport { Bleed } from '../Bleed/Bleed.js';\r\nimport { RadioButton } from '../RadioButton/RadioButton.js';\r\nimport { Box } from '../Box/Box.js';\r\nimport { errorTextID, InlineError } from '../InlineError/InlineError.js';\r\nimport { BlockStack } from '../BlockStack/BlockStack.js';\r\nimport { Checkbox } from '../Checkbox/Checkbox.js';\r\nimport { Text } from '../Text/Text.js';\r\n\r\nfunction ChoiceList({\r\n  title,\r\n  titleHidden,\r\n  allowMultiple,\r\n  choices,\r\n  selected,\r\n  onChange = noop,\r\n  error,\r\n  disabled = false,\r\n  name: nameProp,\r\n  tone\r\n}) {\r\n  // Type asserting to any is required for TS3.2 but can be removed when we update to 3.3\r\n  // see https://github.com/Microsoft/TypeScript/issues/28768\r\n  const ControlComponent = allowMultiple ? Checkbox : RadioButton;\r\n  const uniqName = useId();\r\n  const name = nameProp ?? uniqName;\r\n  const finalName = allowMultiple ? `${name}[]` : name;\r\n  const titleMarkup = title ? /*#__PURE__*/React.createElement(Box, {\r\n    as: \"legend\",\r\n    paddingBlockEnd: {\r\n      xs: '0',\r\n      md: '100'\r\n    }\r\n  }, /*#__PURE__*/React.createElement(Text, {\r\n    as: \"span\",\r\n    variant: \"bodyMd\",\r\n    visuallyHidden: titleHidden\r\n  }, title)) : null;\r\n  const choicesMarkup = choices.map(choice => {\r\n    const {\r\n      value,\r\n      id,\r\n      label,\r\n      helpText,\r\n      disabled: choiceDisabled,\r\n      describedByError\r\n    } = choice;\r\n    function handleChange(checked) {\r\n      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);\r\n    }\r\n    const isSelected = choiceIsSelected(choice, selected);\r\n    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected) : null;\r\n    const children = renderedChildren ? /*#__PURE__*/React.createElement(\"div\", {\r\n      className: styles.ChoiceChildren\r\n    }, /*#__PURE__*/React.createElement(Box, {\r\n      paddingBlockStart: {\r\n        xs: '400',\r\n        md: '0'\r\n      }\r\n    }, renderedChildren)) : null;\r\n    return /*#__PURE__*/React.createElement(\"li\", {\r\n      key: value\r\n    }, /*#__PURE__*/React.createElement(Bleed, {\r\n      marginBlockEnd: helpText ? {\r\n        xs: '100',\r\n        md: '0'\r\n      } : {\r\n        xs: '0'\r\n      }\r\n    }, /*#__PURE__*/React.createElement(ControlComponent, {\r\n      name: finalName,\r\n      value: value,\r\n      id: id,\r\n      label: label,\r\n      disabled: choiceDisabled || disabled,\r\n      fill: {\r\n        xs: true,\r\n        sm: false\r\n      },\r\n      checked: choiceIsSelected(choice, selected),\r\n      helpText: helpText,\r\n      onChange: handleChange,\r\n      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null,\r\n      tone: tone\r\n    }), children));\r\n  });\r\n  const errorMarkup = error && /*#__PURE__*/React.createElement(Box, {\r\n    paddingBlockStart: {\r\n      xs: '0',\r\n      md: '100'\r\n    },\r\n    paddingBlockEnd: \"200\"\r\n  }, /*#__PURE__*/React.createElement(InlineError, {\r\n    message: error,\r\n    fieldID: finalName\r\n  }));\r\n  return /*#__PURE__*/React.createElement(BlockStack, {\r\n    as: \"fieldset\",\r\n    gap: {\r\n      xs: '400',\r\n      md: '0'\r\n    },\r\n    \"aria-invalid\": error != null,\r\n    id: finalName\r\n  }, titleMarkup, /*#__PURE__*/React.createElement(BlockStack, {\r\n    as: \"ul\",\r\n    gap: {\r\n      xs: '400',\r\n      md: '0'\r\n    }\r\n  }, choicesMarkup), errorMarkup);\r\n}\r\nfunction noop() {}\r\nfunction choiceIsSelected({\r\n  value\r\n}, selected) {\r\n  return selected.includes(value);\r\n}\r\nfunction updateSelectedChoices({\r\n  value\r\n}, checked, selected, allowMultiple = false) {\r\n  if (checked) {\r\n    return allowMultiple ? [...selected, value] : [value];\r\n  }\r\n  return selected.filter(selectedChoice => selectedChoice !== value);\r\n}\r\n\r\nexport { ChoiceList };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}