{"ast":null,"code":"import React from 'react';\nimport { classNames, variationName, getResponsiveProps, getResponsiveValue, sanitizeCustomProperties } from '../../utilities/css.js';\nimport styles from './Choice.css.js';\nimport { Text } from '../Text/Text.js';\nimport { InlineError } from '../InlineError/InlineError.js';\nfunction Choice(_ref) {\n  let {\n    id,\n    label,\n    disabled,\n    error,\n    children,\n    labelHidden,\n    helpText,\n    onClick,\n    labelClassName,\n    fill,\n    bleed,\n    bleedBlockStart,\n    bleedBlockEnd,\n    bleedInlineStart,\n    bleedInlineEnd,\n    tone\n  } = _ref;\n  const className = classNames(styles.Choice, labelHidden && styles.labelHidden, disabled && styles.disabled, tone && styles[variationName('tone', tone)], labelClassName);\n  const labelStyle = {\n    // Pass through overrides for bleed values if they're set by the prop\n    ...getResponsiveProps('choice', 'bleed-block-end', 'space', bleedBlockEnd || bleed),\n    ...getResponsiveProps('choice', 'bleed-block-start', 'space', bleedBlockStart || bleed),\n    ...getResponsiveProps('choice', 'bleed-inline-start', 'space', bleedInlineStart || bleed),\n    ...getResponsiveProps('choice', 'bleed-inline-end', 'space', bleedInlineEnd || bleed),\n    ...Object.fromEntries(Object.entries(getResponsiveValue('choice', 'fill', fill)).map(\n    // Map \"true\" => \"100%\" and \"false\" => \"auto\" for use in\n    // inline/block-size calc()\n    _ref2 => {\n      let [key, value] = _ref2;\n      return [key, value ? '100%' : 'auto'];\n    }))\n  };\n  const labelMarkup = /*#__PURE__*/\n  // NOTE: Can't use a Box here for a few reasons:\n  // - as=\"label\" fails `Element` typecheck (even though the JS works)\n  // - Can't pass hard coded values to padding (forced to tokens)\n  // - Can't pass negative values to padding\n  // - Can't pass margins at all\n  React.createElement(\"label\", {\n    className: className,\n    htmlFor: id,\n    onClick: onClick,\n    style: sanitizeCustomProperties(labelStyle)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Control\n  }, children), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodyMd\"\n  }, label)));\n  const helpTextMarkup = helpText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HelpText,\n    id: helpTextID(id)\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\"\n    // `undefined` means color: inherit\n    // the nearest ancestor with a specified color is .Descriptions in Choice.scss\n    ,\n\n    tone: disabled ? undefined : 'subdued'\n  }, helpText)) : null;\n  const errorMarkup = error && typeof error !== 'boolean' && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Error\n  }, /*#__PURE__*/React.createElement(InlineError, {\n    message: error,\n    fieldID: id\n  }));\n  const descriptionMarkup = helpTextMarkup || errorMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Descriptions\n  }, errorMarkup, helpTextMarkup) : null;\n  return descriptionMarkup ? /*#__PURE__*/React.createElement(\"div\", null, labelMarkup, descriptionMarkup) : labelMarkup;\n}\nfunction helpTextID(id) {\n  return `${id}HelpText`;\n}\nexport { Choice, helpTextID };","map":{"version":3,"names":["React","classNames","variationName","getResponsiveProps","getResponsiveValue","sanitizeCustomProperties","styles","Text","InlineError","Choice","_ref","id","label","disabled","error","children","labelHidden","helpText","onClick","labelClassName","fill","bleed","bleedBlockStart","bleedBlockEnd","bleedInlineStart","bleedInlineEnd","tone","className","labelStyle","Object","fromEntries","entries","map","_ref2","key","value","labelMarkup","createElement","htmlFor","style","Control","Label","as","variant","helpTextMarkup","HelpText","helpTextID","undefined","errorMarkup","Error","message","fieldID","descriptionMarkup","Descriptions"],"sources":["D:/tesst/test/node_modules/@shopify/polaris/build/esm/components/Choice/Choice.js"],"sourcesContent":["import React from 'react';\nimport { classNames, variationName, getResponsiveProps, getResponsiveValue, sanitizeCustomProperties } from '../../utilities/css.js';\nimport styles from './Choice.css.js';\nimport { Text } from '../Text/Text.js';\nimport { InlineError } from '../InlineError/InlineError.js';\n\nfunction Choice({\n  id,\n  label,\n  disabled,\n  error,\n  children,\n  labelHidden,\n  helpText,\n  onClick,\n  labelClassName,\n  fill,\n  bleed,\n  bleedBlockStart,\n  bleedBlockEnd,\n  bleedInlineStart,\n  bleedInlineEnd,\n  tone\n}) {\n  const className = classNames(styles.Choice, labelHidden && styles.labelHidden, disabled && styles.disabled, tone && styles[variationName('tone', tone)], labelClassName);\n  const labelStyle = {\n    // Pass through overrides for bleed values if they're set by the prop\n    ...getResponsiveProps('choice', 'bleed-block-end', 'space', bleedBlockEnd || bleed),\n    ...getResponsiveProps('choice', 'bleed-block-start', 'space', bleedBlockStart || bleed),\n    ...getResponsiveProps('choice', 'bleed-inline-start', 'space', bleedInlineStart || bleed),\n    ...getResponsiveProps('choice', 'bleed-inline-end', 'space', bleedInlineEnd || bleed),\n    ...Object.fromEntries(Object.entries(getResponsiveValue('choice', 'fill', fill)).map(\n    // Map \"true\" => \"100%\" and \"false\" => \"auto\" for use in\n    // inline/block-size calc()\n    ([key, value]) => [key, value ? '100%' : 'auto']))\n  };\n  const labelMarkup =\n  /*#__PURE__*/\n  // NOTE: Can't use a Box here for a few reasons:\n  // - as=\"label\" fails `Element` typecheck (even though the JS works)\n  // - Can't pass hard coded values to padding (forced to tokens)\n  // - Can't pass negative values to padding\n  // - Can't pass margins at all\n  React.createElement(\"label\", {\n    className: className,\n    htmlFor: id,\n    onClick: onClick,\n    style: sanitizeCustomProperties(labelStyle)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Control\n  }, children), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodyMd\"\n  }, label)));\n  const helpTextMarkup = helpText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HelpText,\n    id: helpTextID(id)\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\"\n    // `undefined` means color: inherit\n    // the nearest ancestor with a specified color is .Descriptions in Choice.scss\n    ,\n    tone: disabled ? undefined : 'subdued'\n  }, helpText)) : null;\n  const errorMarkup = error && typeof error !== 'boolean' && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Error\n  }, /*#__PURE__*/React.createElement(InlineError, {\n    message: error,\n    fieldID: id\n  }));\n  const descriptionMarkup = helpTextMarkup || errorMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Descriptions\n  }, errorMarkup, helpTextMarkup) : null;\n  return descriptionMarkup ? /*#__PURE__*/React.createElement(\"div\", null, labelMarkup, descriptionMarkup) : labelMarkup;\n}\nfunction helpTextID(id) {\n  return `${id}HelpText`;\n}\n\nexport { Choice, helpTextID };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}