{"ast":null,"code":"import { useRef } from 'react';\nconst UNIQUE_IDENTIFIER = Symbol('unique_identifier');\n\n/**\r\n * useLazyRef provides a lazy initial value, similar to lazy\r\n * initial state the initialValue is the value used during\r\n * initialization and disregarded after that. Use this hook\r\n * for expensive initialization.\r\n * @param initialValue - A function that will return the initial\r\n * value and be disregarded after that\r\n * @returns MutableRefObject<T> - Returns a ref object with the\r\n * results from invoking initial value\r\n * @example\r\n * function ComponentExample() {\r\n *  const title = useLazyRef(() => someExpensiveComputation());\r\n *  return <h1>{title.current}</h1>;\r\n * }\r\n */\nfunction useLazyRef(initialValue) {\n  const lazyRef = useRef(UNIQUE_IDENTIFIER);\n  if (lazyRef.current === UNIQUE_IDENTIFIER) {\n    lazyRef.current = initialValue();\n  }\n  return lazyRef;\n}\nexport { useLazyRef };","map":{"version":3,"names":["useRef","UNIQUE_IDENTIFIER","Symbol","useLazyRef","initialValue","lazyRef","current"],"sources":["D:/Orichi_test/4. Form_Discount/test/node_modules/@shopify/polaris/build/esm/utilities/use-lazy-ref.js"],"sourcesContent":["import { useRef } from 'react';\r\n\r\nconst UNIQUE_IDENTIFIER = Symbol('unique_identifier');\r\n\r\n/**\r\n * useLazyRef provides a lazy initial value, similar to lazy\r\n * initial state the initialValue is the value used during\r\n * initialization and disregarded after that. Use this hook\r\n * for expensive initialization.\r\n * @param initialValue - A function that will return the initial\r\n * value and be disregarded after that\r\n * @returns MutableRefObject<T> - Returns a ref object with the\r\n * results from invoking initial value\r\n * @example\r\n * function ComponentExample() {\r\n *  const title = useLazyRef(() => someExpensiveComputation());\r\n *  return <h1>{title.current}</h1>;\r\n * }\r\n */\r\nfunction useLazyRef(initialValue) {\r\n  const lazyRef = useRef(UNIQUE_IDENTIFIER);\r\n  if (lazyRef.current === UNIQUE_IDENTIFIER) {\r\n    lazyRef.current = initialValue();\r\n  }\r\n  return lazyRef;\r\n}\r\n\r\nexport { useLazyRef };\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,MAAMC,iBAAiB,GAAGC,MAAM,CAAC,mBAAmB,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,YAAY,EAAE;EAChC,MAAMC,OAAO,GAAGL,MAAM,CAACC,iBAAiB,CAAC;EACzC,IAAII,OAAO,CAACC,OAAO,KAAKL,iBAAiB,EAAE;IACzCI,OAAO,CAACC,OAAO,GAAGF,YAAY,CAAC,CAAC;EAClC;EACA,OAAOC,OAAO;AAChB;AAEA,SAASF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}